paths:
  /api/prompts:
    get:
      summary: List prompts
      description: >
        Get a list of prompts.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Prompt"
    post:
      summary: Create prompt
      description: >
        Create a new prompt.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Prompt"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prompt"

  /api/prompts/{id}/versions:
    post:
      summary: Create prompt version
      description: >
        Create a new version of a prompt.
      parameters:
        - name: id
          in: path
          description: Prompt ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptVersion"

      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptVersion"

  /api/prompts/{id}/versions/{version_id}/inference-runs:
    post:
      summary: Run prompt inference
      description: >
        Run a prompt inference.
      parameters:
        - name: id
          in: path
          description: Prompt ID
          required: true
          schema:
            type: integer
        - name: version_id
          in: path
          description: Prompt Version ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InferenceRun"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InferenceRun"
    get:
      summary: Get inference run info
      description: >-
        Get information (status, etadata, etc) about an existing inference run
      parameters:
        - name: id
          in: path
          description: Prompt ID
          required: true
          schema:
            type: integer
        - name: version_id
          in: path
          description: Prompt Version ID
          required: true
          schema:
            type: integer
        - name: project
          in: query
          description: The ID of the project that this Interence Run makes predictions on
          required: true
          schema:
            type: integer
        - name: project_subset
          in: query
          description: >
            Defines which tasks are operated on
            (e.g. HasGT will only operate on tasks with a ground truth annotation, but All will operate on all records)
          required: true
          schema:
            type: string
            enum: [All, HasGT, Sample]
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InferenceRun"

  /api/inference-runs/{pk}/indicators:
    get:
      summary: Get key indicators
      description: >
        Get key indicators for the Prompt dashboard.
      parameters:
        - name: pk
          in: path
          description: Inference run ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "./dashboards.yaml#/components/schemas/KeyIndicators"

  /api/inference-runs/{pk}/indicators/{indicator_key}:
    get:
      summary: Get key indicator
      description: >
        Get a specific key indicator for the Prompt dashboard.
      parameters:
        - name: indicator_key
          in: path
          description: Key of the indicator
          required: true
          schema:
            type: string
        - name: pk
          in: path
          description: Inference run ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "./dashboards.yaml#/components/schemas/KeyIndicatorValue"

  /api/model-provider-connections:
    post:
      summary: Create model provider connection
      description: >
        Create a new model provider connection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelProviderConnection"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelProviderConnection"

  /api/model-run/batch-predictions:
    post:
      summary: Create batch predictions
      description: >
        Create a new batch prediction.
      requestBody:
        $ref: "#/components/requestBodies/api_prompts_batch_predictions_create"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

  /api/model-run/batch-failed-predictions:
    post:
      summary: Create batch of failed predictions
      description: >
        Create a new batch of failed predictions.
      requestBody:
        $ref: "#/components/requestBodies/api_prompts_batch_failed_predictions_create"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

components:
  schemas:
    Prompt:
      required:
        - title
        - input_fields
        - output_classes
      type: object
      properties:
        title:
          title: Title
          description: Title of the prompt
          type: string
          maxLength: 500
        description:
          title: Description
          description: Description of the prompt
          type: string
          nullable: true
        created_by:
          title: Created by
          description: User ID of the creator of the prompt
          anyOf:
            - type: integer
            - type: object
          nullable: true
          readOnly: true
        created_at:
          title: Created at
          description: Date and time the prompt was created
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          description: Date and time the prompt was last updated
          type: string
          format: date-time
          readOnly: true
        organization:
          title: Organization
          description: Organization ID of the prompt
          anyOf:
            - type: integer
            - type: object
          nullable: true
        input_fields:
          title: Input fields
          description: List of input fields
          type: array
          items:
            type: string
        output_classes:
          title: Output classes
          description: List of output classes
          type: array
          items:
            type: string
        associated_projects:
          title: Associated projects
          description: List of associated projects IDs
          type: array
          items:
            type: integer
          nullable: true
        skill_name:
          title: Skill name
          description: Name of the skill
          type: string
          nullable: true
    PromptVersion:
      required:
        - title
        - prompt
        - provider
        - provider_model_id
      type: object
      properties:
        title:
          title: Title
          type: string
          maxLength: 500
        parent_model:
          title: Parent Model ID
          type: integer
        prompt:
          title: Prompt
          type: string

        provider:
          title: Provider
          type: string
          enum:
            - OpenAI
            - AzureOpenAI
        provider_model_id:
          title: Provider Model ID
          type: string
        created_by:
          anyOf:
            - type: integer
            - type: object
          nullable: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        organization:
          anyOf:
            - type: integer
            - type: object
          nullable: true
    InferenceRun:
      required:
        - project
        - project_subset
      type: object
      properties:
        organization:
          anyOf:
            - type: integer
            - type: object
          nullable: true
        project:
          title: Project ID
          type: integer
        model_version:
          title: Prompt Version ID
          type: string
        created_by:
          anyOf:
            - type: integer
            - type: object
          nullable: true
        project_subset:
          title: Project Subset
          type: string
          enum:
            - All
            - HasGT
            - Sample
        status:
          title: Status
          type: string
          enum:
            - Pending
            - InProgress
            - Completed
            - Failed
            - Canceled
        job_id:
          title: Job ID
          type: string
          nullable: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        triggered_at:
          title: Triggered at
          type: string
          format: date-time
          nullable: true
          readOnly: true
        predictions_updated_at:
          title: Predictions Updated at
          type: string
          format: date-time
          nullable: true
          readOnly: true
        completed_at:
          title: Completed at
          type: string
          format: date-time
          nullable: true
          readOnly: true

    ModelProviderConnection:
      required:
        - provider
        - api_key
      type: object
      properties:
        provider:
          title: Provider
          type: string
          enum:
            - OpenAI
            - AzureOpenAI
        api_key:
          title: API Key
          type: string
          nullable: true
        deployment_name:
          title: Deployment Name
          type: string
          nullable: true
        endpoint:
          title: Endpoint
          type: string
          nullable: true
        scope:
          title: Scope
          type: string
          enum:
            - Organization
            - User
            - Model
        organization:
          anyOf:
            - type: integer
            - type: object
          nullable: true
        created_by:
          anyOf:
            - type: integer
            - type: object
          nullable: true
          readOnly: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true

  requestBodies:
    api_prompts_batch_predictions_create:
      content:
        application/json:
          schema:
            type: object
            properties:
              modelrun_id:
                title: Model Run ID
                description: Model Run ID to associate the prediction with
                type: integer
              results:
                title: Results
                type: array
                items:
                  type: object
                  properties:
                    task_id:
                      type: integer
                      title: Task ID
                      description: Task ID to associate the prediction with
                    output:
                      type: object
                      title: Prediction Output
                      description: >
                        Prediction output that contains keys from labeling config.
                        Each key must be a valid control tag name from the labeling config.
                        For example, given the output:
                        ```json
                        {"sentiment": "positive"}
                        ```
                        it will be converted to the internal LS annotation format:
                        ```json
                        {
                          "value": {
                            "choices": ["positive"]
                          },
                          "from_name": "label",
                          "to_name": "",
                          ...
                        }
                        ```
                      example:
                        sentiment: positive
                        key1: value1
                        key2: value2
                    prompt_tokens:
                      type: integer
                      title: Prompt Tokens
                      description: Number of tokens in the prompt
                      nullable: true
                    completion_tokens:
                      type: integer
                      title: Completion Tokens
                      description: Number of tokens in the completion
                      nullable: true
                    prompt_cost_usd:
                      type: number
                      format: float
                      title: Prompt Cost
                      description: Cost of the prompt (in USD)
                      nullable: true
                    completion_cost_usd:
                      type: number
                      format: float
                      title: Completion Cost
                      description: Cost of the completion (in USD)
                      nullable: true
                    total_cost_usd:
                      type: number
                      format: float
                      title: Total Cost
                      description: Total cost of the inference (in USD)
                      nullable: true
                  additionalProperties:
                    nullable: true
    api_prompts_batch_failed_predictions_create:
      content:
        application/json:
          schema:
            type: object
            properties:
              modelrun_id:
                title: Model Run ID
                description: Model Run ID where the failed predictions came from
                type: integer
              failed_predictions:
                title: Results
                type: array
                items:
                  type: object
                  properties:
                    task_id:
                      type: integer
                      title: Task ID
                      description: Task ID to associate the prediction with
                    error_type:
                      type: string
                      title: Error Type
                      description: Type of error (e.g. "Timeout", "Rate Limit", etc)
                    message:
                      type: string
                      title: Message
                      description: Error message details
                  additionalProperties:
                    nullable: true
